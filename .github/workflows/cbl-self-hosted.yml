name: Build and test MyString library (self-hosted)
run-name: ${{ github.actor }} is building and testing MyString Project
on: [push]
jobs:
  build:
    timeout-minutes: 2
    runs-on: [self-hosted, linux, CPSC334]
    container: ubuntu:latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Build project
        run: |
          apt update
          apt-get install -y make g++
          make build
      - run: echo "This job's status is ${{ job.status }}."
  test:
    timeout-minutes: 2
    runs-on: [self-hosted, linux, CPSC334]
    container: ubuntu:latest
    needs: build
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Test project
        run: |
          apt update
          apt-get install -y libgtest-dev cmake g++ make
          make test
      - run: echo "This job's status is ${{ job.status }}."
  package:
    timeout-minutes: 2
    runs-on: [self-hosted, linux, CPSC334]
    container: ubuntu:latest
    needs: test
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Build deb pkg
        run: |
          apt-get update
          apt-get install -y make
          make build-deb
      - name: Upload deb pkg artifact
        uses: actions/upload-artifact@v4
        with:
          name: mystrlib-v1.0.0.deb
          path: mystrlib-v1.0.0.deb
      - run: echo "This job's status is ${{ job.status }}."
  lint:
    timeout-minutes: 2
    runs-on: [self-hosted, linux, CPSC334]
    container: ubuntu:latest
    needs: package
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - name: Lint deb pkg
        run: |
          apt update
          apt-get install -y lintian make
          make lint-deb
      - run: echo "This job's status is ${{ job.status }}."
